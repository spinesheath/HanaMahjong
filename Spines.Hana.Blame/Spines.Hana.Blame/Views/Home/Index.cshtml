<div class="content" data-content="browse">
    @await Html.PartialAsync("_BrowsePartial")
</div>
<div class="content" data-content="blame">
    @await Html.PartialAsync("_BlamePartial")
</div>
<div class="content" data-content="play">
    @await Html.PartialAsync("_PlayPartial")
</div>
<div class="content" data-content="snitch">
    @await Html.PartialAsync("_SnitchPartial", ViewData["SnitchUrl"])
</div>

@section MenuItems
{
    <li onclick="changeView(this.dataset.content);" data-content="browse">
        <a href="javascript:;">Browse</a>
    </li>
    <li onclick="changeView(this.dataset.content);" data-content="blame">
        <a href="javascript:;">Blame</a>
    </li>
    <li onclick="changeView(this.dataset.content);" data-content="play">
        <a href="javascript:;">Play</a>
    </li>
    <li onclick="changeView(this.dataset.content);" data-content="snitch">
        <a href="javascript:;">Snitch</a>
    </li>
}

@section Scripts
{
    <script>
        $(init);

        function init() {
            window.onpopstate = onPopstate;

            initThreeJS();
            const url = '@ViewData["StorageUrl"]';
            initReplay(url);

            changeView();
        }

        function onPopstate(e) {
            navigationOnPopState(e.state);
            replayOnPopState(e.state);
        }

        function navigationOnPopState(state) {
            changeView(state && state.v);
        }

        function changeView(target) {
            const c = target || "blame";
            const contents = document.getElementsByClassName("content");
            const count = contents.length;
            for (let i = 0; i < count; i++) {
                const content = contents[i];
                content.hidden = content.dataset.content !== c;
            }
            const param = c === "blame" ? undefined : c;
            updateBrowserHistoryParameters({ v: param });
        }
    </script>
}